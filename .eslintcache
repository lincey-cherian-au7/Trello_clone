[{"F:\\New folder\\trello_clone\\src\\index.js":"1","F:\\New folder\\trello_clone\\src\\reportWebVitals.js":"2","F:\\New folder\\trello_clone\\src\\components\\App.js":"3","F:\\New folder\\trello_clone\\src\\store\\index.js":"4","F:\\New folder\\trello_clone\\src\\components\\TrelloList\\TrelloList.js":"5","F:\\New folder\\trello_clone\\src\\components\\TrelloCard\\TrelloCard.js":"6","F:\\New folder\\trello_clone\\src\\reducers\\index.js":"7","F:\\New folder\\trello_clone\\src\\reducers\\listReducer.js":"8","F:\\New folder\\trello_clone\\src\\components\\TrelloActionButton\\TrelloActionButton.js":"9","F:\\New folder\\trello_clone\\src\\actions\\index.js":"10","F:\\New folder\\trello_clone\\src\\actions\\listActions.js":"11","F:\\New folder\\trello_clone\\src\\actions\\cardActions.js":"12"},{"size":623,"mtime":1608291181349,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":1632,"mtime":1608291181204,"results":"16","hashOfConfig":"14"},{"size":142,"mtime":1608189315723,"results":"17","hashOfConfig":"14"},{"size":1508,"mtime":1608291181321,"results":"18","hashOfConfig":"14"},{"size":767,"mtime":1608291181283,"results":"19","hashOfConfig":"14"},{"size":146,"mtime":1608189315720,"results":"20","hashOfConfig":"14"},{"size":3138,"mtime":1608291181356,"results":"21","hashOfConfig":"14"},{"size":3553,"mtime":1608291181255,"results":"22","hashOfConfig":"14"},{"size":178,"mtime":1608291181156,"results":"23","hashOfConfig":"14"},{"size":562,"mtime":1608291181157,"results":"24","hashOfConfig":"14"},{"size":169,"mtime":1608267225264,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"asn13",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\New folder\\trello_clone\\src\\index.js",[],"F:\\New folder\\trello_clone\\src\\reportWebVitals.js",[],["52","53"],"F:\\New folder\\trello_clone\\src\\components\\App.js",[],"F:\\New folder\\trello_clone\\src\\store\\index.js",[],"F:\\New folder\\trello_clone\\src\\components\\TrelloList\\TrelloList.js",[],"F:\\New folder\\trello_clone\\src\\components\\TrelloCard\\TrelloCard.js",[],"F:\\New folder\\trello_clone\\src\\reducers\\index.js",[],"F:\\New folder\\trello_clone\\src\\reducers\\listReducer.js",["54"],"import {CONSTANTS} from '../actions'\r\n\r\nlet listID = 2\r\nlet cardID= 4\r\nconst initialState =[\r\n    {\r\n        title:'Last Episode',\r\n        id:0,\r\n        cards:[\r\n            {\r\n                id:0,\r\n                text:\"we created a static text\"\r\n            },\r\n            {\r\n                id:1,\r\n                text:\"We need to mix between material ui and styled component\"\r\n\r\n            }\r\n        ]\r\n    },{\r\n        title:'Current Episode',\r\n        id:0,\r\n        cards:[\r\n            {\r\n                id:0,\r\n                text:\"we created a static text\"\r\n            },\r\n            {\r\n                id:1,\r\n                text:\"We need to mix between material ui and styled component\"\r\n\r\n            },\r\n            {\r\n                id:2,\r\n                text:\"We need  to make dynamic content\"\r\n\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nconst listReducer =(state=initialState,action)=>{\r\n    switch(action.type){\r\n        case CONSTANTS.ADD_LIST:\r\n            const newList={\r\n                title:action.payload,\r\n                id:listID,\r\n                cards:[]\r\n            };\r\n            listID +=1\r\n            return [...state,newList];\r\n        case CONSTANTS.ADD_CARD:\r\n            const newCard ={\r\n                text:action.payload.text,\r\n                id:cardID\r\n            };\r\n            cardID +=1\r\n            \r\n            const newState =state.map(list=>{\r\n                if(list.id===action.payload.listID){\r\n                    return {\r\n                        ...list,\r\n                        cards:[...list.cards,newCard]\r\n                    }\r\n                }else{\r\n                    return list\r\n                }\r\n            })\r\n\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default listReducer;","F:\\New folder\\trello_clone\\src\\components\\TrelloActionButton\\TrelloActionButton.js",[],"F:\\New folder\\trello_clone\\src\\actions\\index.js",[],"F:\\New folder\\trello_clone\\src\\actions\\listActions.js",[],"F:\\New folder\\trello_clone\\src\\actions\\cardActions.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":76,"column":17,"nodeType":"61","messageId":"62","endLine":76,"endColumn":28},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'draggableId' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]